input {

    #  0mq plugins are disabled.  They seem to not play nice with
    #  gunicorn+gevent (specifically gevent)
    #
    #    zeromq_hs {
    #        type => "metlog"
    #        mode => "server"
    #        format => "plain"
    #        address => "tcp://0.0.0.0:5180"
    #    }
    #
    #    # This is the primary input plugin for messages
    #    zeromq {
    #       type => "metlog"
    #       mode => "server"
    #       format => "json"
    #       address => "tcp://0.0.0.0:5565"
    #       queue_size => 1000
    #    }

    udp {
        type => "metlog"
        mode => "server"
        format => "json"
        host => "0.0.0.0"
        port => 5565
    }

}

filter {

    tagger {
        # all the oldstyle log.severity_level(...) messages get tagged to go to
        # plain text output
        type => "metlog"
        pattern => [ "type", "oldstyle" ]
        add_tag => [ "output_text" ]
    }

    tagger {
        # all counter messages are tagged to go to statsd
        type => "metlog"
        pattern => [ "type", "counter" ]
        add_tag => ["output_statsd"]
    }

    tagger {
        # all timer messages go to statsd
        type => "metlog"
        pattern => [ "fields/type", "timer"]
        add_tag => [ "output_statsd" ]
    }

    tagger {
        # all sentry messages go to sentry
        type => "metlog"
        pattern => [ "type", "sentry"]
        add_tag => [ "output_sentry" ]
    }

    tagger {
        # all CEF messages eventually go to a text file
        type => "metlog"
        pattern => [ "type", "cef"]
        add_tag => [ "output_cef" ]
    }

    catchall {
        # anything that isn't tagged already gets tagged here
        tags => [ "output_text", "output_statsd", "output_sentry", "output_cef" ]
        add_tag => ['filter-catchall']
    }

}


output {
    # keep stdout on to watch everything
    stdout { }

    metlog_statsd {
        # Timer messages get routed to statsd
        tags => ["output_statsd"]

        host => '127.0.0.1'
        port => 8125
    }

    metlog_file {
        # The plaintext logfile
        format => "preformatted_field"
        formatted_field => "payload"
        prefix_timestamps => true
        tags => ["output_text"]
        path => "/var/log/metlog/sampleapp.log"
    }

    metlog_sentry {
        # Timer messages get routed to statsd
        # Note that this DSN URL is the 'default' application in
        # Sentry
        dsn => "http://5030659c0a8948b8aad226cd8241e701:3b2feac77d674a3e8f094767720711d8@192.168.20.2:9000/1"
        tags => [ "output_sentry" ]
    }

    metlog_file {
        # CEF log file
        tags => ["output_cef"]
        format => "preformatted_field"
        formatted_field => "payload"
        path => "/var/log/metlog/metlog_cef.log"
    }

    metlog_file {
        # HDFS log file
        format => "json"
        prefix_timestamps => true
        formatted_field => "@fields"
        tags => ["filter-catchall"]
        path => "/var/log/metlog/metrics-hdfs.log"
    }



}
